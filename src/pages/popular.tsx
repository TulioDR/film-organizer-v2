import { GetServerSideProps } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import RevealVertical from "../animations/RevealVertical";
import FrontPoster from "../components/FrontPoster";
import PageTitle from "../components/PageTitle";
import PageAnimationContainer from "../containers/PageAnimationContainer";
import usePageLoadingContext from "../context/PageLoadingContext";

export const getServerSideProps: GetServerSideProps = async (context) => {
   const { type } = context.query;
   const mediaType = type === "tv" ? "tv" : "movie";
   return {
      props: { mediaType }, // will be passed to the page component as props
   };
};

interface Props {
   mediaType: "tv" | "movie";
}

export default function Popular({ mediaType }: Props) {
   const [media, setMedia] = useState<any[]>([]);
   const { setIsLoading } = usePageLoadingContext();

   const router = useRouter();

   useEffect(() => {
      const getData = async () => {
         const res = await fetch(`/api/popular/${mediaType}/1`);
         const data = await res.json();
         console.log(data.results);
         setMedia(data.results);
         setIsLoading(false);
      };
      getData();
   }, []);

   return (
      <PageAnimationContainer>
         <Head>
            <title>Popular</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <PageTitle>Popular</PageTitle>
         <div className="grid grid-cols-4 2xl:grid-cols-5 gap-5">
            {media.map((media) => (
               <RevealVertical key={media.id}>
                  <article className="aspect-[2/3] relative rounded-xl overflow-hidden">
                     <FrontPoster movie={media} />
                  </article>
               </RevealVertical>
            ))}
         </div>
      </PageAnimationContainer>
   );
}
