import { useState } from "react";
import AuthBackground from "../components/auth/AuthBackground";
import AuthContainer from "../components/auth/AuthContainer";
import { GetServerSideProps } from "next";
import { createServerSupabaseClient } from "@supabase/auth-helpers-nextjs";
import { useSupabaseClient } from "@supabase/auth-helpers-react";
import FormikForm from "../components/auth/FormikForm";
import SocialLogin from "../components/auth/SocialLog";

import linkedin from "../data/images/logos/linkedin.png";
import github from "../data/images/logos/github.png";
import google from "../data/images/logos/google.png";
import Head from "next/head";
import AuthHeader from "../components/auth/AuthHeader";

export const getServerSideProps: GetServerSideProps = async (context) => {
   const supabase = createServerSupabaseClient(context);
   const { data } = await supabase.auth.getSession();
   if (data.session) {
      return {
         redirect: {
            destination: "/",
            permanent: false,
         },
      };
   }

   return {
      props: {},
   };
};

export default function Auth() {
   const supabaseClient = useSupabaseClient();
   const [isLogin, setIsLogin] = useState(true);
   const toggle = () => setIsLogin(!isLogin);

   const logInHandler = async (values: any) => {
      const { email, password } = values;
      return await supabaseClient.auth.signInWithPassword({
         email,
         password,
      });
   };
   const SignUpHandler = async (values: any) => {
      const { email, password } = values;
      return await supabaseClient.auth.signUp({
         email,
         password,
      });
   };

   return (
      <div className="relative">
         <Head>
            <title>{isLogin ? "Login" : "Sing Up"}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <AuthBackground />
         <AuthContainer>
            <AuthHeader />
            <div className="text-gray-dark">
               {isLogin
                  ? "Login to your account"
                  : "Sign Up today to start saving your lists!"}
            </div>
            <div className="border-b border-gray-light pb-4 grid grid-cols-3 gap-1">
               <SocialLogin provider="Google" logo={google} />
               <SocialLogin provider="LinkedIn" logo={linkedin} />
               <SocialLogin provider="Github" logo={github} />
            </div>
            <FormikForm
               isLogin={isLogin}
               toggleType={toggle}
               submitHandler={isLogin ? logInHandler : SignUpHandler}
            />
         </AuthContainer>
      </div>
   );
}
