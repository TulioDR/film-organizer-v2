import Head from "next/head";
import { useRouter } from "next/router";
import { FormEvent } from "react";
import { staggerContainer } from "../../animations/StaggerCards";
import DropDown from "@/components/Pages/Discover/DropDown";
import {
   ratings,
   sortByMovie,
   sortByTv,
   movieGenresOptions,
   tvGenresOptions,
   releaseYears,
   searchTypes,
} from "../../data/discover/options";
import useDropDownValues from "../../hooks/useDropDownValues";
import useLanguages from "../../hooks/useLanguages";

import { motion } from "framer-motion";
import useRemoveBackgroundImage from "@/hooks/useRemoveBackgroundImage";
import Title from "@/components/Title";

import search from "@/data/discover/images/search.jpg";
import languages from "@/data/discover/images/languages.jpg";
import genres from "@/data/discover/images/genres.jpg";
import yearImage from "@/data/discover/images/year.jpg";
import ratingImage from "@/data/discover/images/rating.jpg";
import sortImage from "@/data/discover/images/sort.jpeg";
import DiscoverSubmitButton from "@/components/Pages/Discover/DiscoverSubmitButton";

export default function Discover() {
   const router = useRouter();
   const {
      language,
      setLanguage,
      genre,
      setGenre,
      year,
      setYear,
      rating,
      setRating,
      sortBy,
      setSortBy,
      searchType,
      setSearchType,
   } = useDropDownValues();

   const isMovie = searchType.value === "movie";
   const handleSubmit = (e: FormEvent) => {
      e.preventDefault();
      const mediaType = isMovie ? "movie" : "tv";

      const languageQuery = `&with_original_language=${language.value}`;
      const genreQuery = `&with_genres=${genre.value}`;
      const yearQuery = `&${isMovie ? "year" : "first_air_date_year"}=${
         year.value
      }`;
      const ratingQuery = `&vote_average.gte=${rating.value}`;
      const sortByQuery = `&sort_by=${sortBy.value}`;

      const searchTerm =
         languageQuery + genreQuery + yearQuery + ratingQuery + sortByQuery;

      router.push(`/discover/${mediaType}?${searchTerm}`);
   };

   const { languagesOptions } = useLanguages();

   useRemoveBackgroundImage();

   return (
      <div className="">
         <Head>
            <title>Discover</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <Title title="Discover" />
         <form onSubmit={handleSubmit}>
            <motion.div
               variants={staggerContainer}
               initial="initial"
               animate="animate"
               exit="exit"
               className="grid gap-x-5 gap-y-10 my-10 sm:grid-cols-2 xl:grid-cols-3 2xl:px-20"
            >
               <DropDown
                  title="Type of Search"
                  options={searchTypes}
                  value={searchType}
                  setValue={setSearchType}
                  icon={isMovie ? "movie" : "smart_display"}
                  image={search}
               />
               <DropDown
                  title="Languages"
                  options={languagesOptions}
                  value={language}
                  setValue={setLanguage}
                  icon="translate"
                  image={languages}
               />
               <DropDown
                  title="Genres"
                  options={isMovie ? movieGenresOptions : tvGenresOptions}
                  value={genre}
                  setValue={setGenre}
                  icon="theater_comedy"
                  image={genres}
               />
               <DropDown
                  title="Year of Release"
                  options={releaseYears}
                  value={year}
                  setValue={setYear}
                  icon="event"
                  image={yearImage}
               />
               <DropDown
                  title="Rating"
                  options={ratings}
                  value={rating}
                  setValue={setRating}
                  icon="star_rate"
                  image={ratingImage}
               />
               <DropDown
                  title="Sort By"
                  options={isMovie ? sortByMovie : sortByTv}
                  value={sortBy}
                  setValue={setSortBy}
                  icon="sort"
                  image={sortImage}
               />
            </motion.div>
            <DiscoverSubmitButton />
         </form>
      </div>
   );
}
