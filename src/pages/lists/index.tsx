import Head from "next/head";
import { useState } from "react";
import DeleteListModal from "../../components/manage/DeleteListModal";
import ListCard from "../../components/manage/ListCard";
import PageTitle from "../../components/PageTitle";
import useListsContext from "../../context/ListsContext";
import ListModel from "../../models/listModel";
import { motion } from "framer-motion";
import { staggerContainer } from "../../animations/StaggerCards";
import { useUser } from "@supabase/auth-helpers-react";
import ListsLoginAdvice from "../../components/manage/ListsLoginAdvice";

export default function Lists() {
   const user = useUser();
   const { lists } = useListsContext();
   const [listToDelete, setListToDelete] = useState<ListModel | null>(null);

   const [isModalOpen, setIsModalOpen] = useState<boolean>(false);
   const openDeleteModal = (list: any) => {
      setIsModalOpen(true);
      setListToDelete(list);
   };
   const closeDeleteModal = () => {
      setIsModalOpen(false);
      setListToDelete(null);
   };

   return (
      <>
         <Head>
            <title>Manage Lists</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <PageTitle>Manage</PageTitle>
         {user ? (
            <motion.div
               variants={staggerContainer}
               initial="initial"
               animate="animate"
               exit="exit"
               className="grid grid-cols-1 lg:grid-cols-2 gap-5 2xl:px-20"
            >
               {lists.map((list) => (
                  <ListCard
                     key={list.id}
                     list={list}
                     openDeleteModal={openDeleteModal}
                  />
               ))}
            </motion.div>
         ) : (
            <ListsLoginAdvice />
         )}

         <DeleteListModal
            isOpen={isModalOpen}
            close={closeDeleteModal}
            listToDelete={listToDelete}
         />
      </>
   );
}
